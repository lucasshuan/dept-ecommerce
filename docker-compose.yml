services:

  mongo:
    image: mongo
    container_name: mongo
    ports:
      - 27017:27017
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_USERNAME: user
      MONGO_PASSWORD: password
  
  zookeeper:
    image: bitnami/zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    volumes:
      - zookeeper_data:/bitnami
    
  kafka:
    image: bitnami/kafka
    container_name: kafka
    hostname: localhost
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://:9092,EXTERNAL://:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_NUM_PARTITIONS: 3
      ALLOW_PLAINTEXT_LISTENER: yes
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/bitnami
      
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui
    depends_on:
      - kafka
      - zookeeper
    ports:
      - 8081:8080
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: dept_ecommerce
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

volumes:
  mongodb_data:
  zookeeper_data:
  kafka_data:
